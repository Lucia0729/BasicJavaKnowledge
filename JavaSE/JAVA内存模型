Java内存模型定义了一种多线程访问java内存的规范。
  1.java内存模型将内存分为了主内存和工作内存。类的状态，也就是类之间共享的变量是存在主内存中，
  每次java线程用到这些主内存中变量的时候，会读一次主内存中的变量，并让这些内存在自己的工作区间中有一份拷贝，
  运行自己线程代码时，用到这些变量，操作的都是自己工作内存中的那一份。在线程代码执行完成后，会将最新的值更新到主内存中。
  
  2.定义了几个原子操作，用于操作主内存和工作内存中的变量。
  
  3.定义了volatile变量的使用规则。
  
  4.happens-before，即先行发生原则，定义了操作a必然先行发生于操作b的一些规则，比如在同一个线程内控制流前面的代码一定先行发生于控制流后面的代码，
  一个释放unlock锁的动作一定先行发生于后面对于同一个锁进行锁定lock的动作等等，只要符合这些规则，则不需要额外做同步措施，如果某段代码不符合所有
  的happens-before规则，则这段代码一定是线程非安全的。
